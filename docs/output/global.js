Ext.data.JsonP.global({"tagname":"class","name":"global","alternateClassNames":[],"members":[{"name":"","tagname":"property","owner":"global","id":"property-","meta":{}},{"name":"_bootstrap","tagname":"method","owner":"global","id":"method-_bootstrap","meta":{}},{"name":"compile","tagname":"method","owner":"global","id":"method-compile","meta":{}},{"name":"compileExplicit","tagname":"method","owner":"global","id":"method-compileExplicit","meta":{"chainable":true}},{"name":"getTemplate","tagname":"method","owner":"global","id":"method-getTemplate","meta":{"chainable":true}},{"name":"js_template","tagname":"method","owner":"global","id":"method-js_template","meta":{}},{"name":"register","tagname":"method","owner":"global","id":"method-register","meta":{"chainable":true}},{"name":"registerSet","tagname":"method","owner":"global","id":"method-registerSet","meta":{"chainable":true}},{"name":"storeTemplate","tagname":"method","owner":"global","id":"method-storeTemplate","meta":{"chainable":true}}],"aliases":{},"files":[{"filename":"","href":""}],"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><div class='doc-contents'><p>Global variables and functions.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/jspyder.html#global-property-' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-property-' class='name expandable'></a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>The MIT License (MIT)\n\nCopyright (c) 2015 Steven Jimenez\n\nPermission is hereby granted, free of charge, to any person...</div><div class='long'><hr />\n\n<p>The MIT License (MIT)</p>\n\n<p>Copyright (c) 2015 Steven Jimenez</p>\n\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:</p>\n\n<p>The above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.</p>\n\n<p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE.</p>\n\n<hr />\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-_bootstrap' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/jspyder.html#global-method-_bootstrap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-_bootstrap' class='name expandable'>_bootstrap</a>( <span class='pre'>global</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Bootstraps (create/configure) JSpyder engine. ...</div><div class='long'><hr />\n\n<p>Bootstraps (create/configure) JSpyder engine.  Basic modules are:\n - lib\n - alg\n - data\n - dom</p>\n\n<hr />\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>global</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-compile' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/js-template.html#global-method-compile' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-compile' class='name expandable'>compile</a>( <span class='pre'>name, data, fn</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Loads the passed template into memory under the identified [name],\nand allows the user to manipulate the template wit...</div><div class='long'><hr />\n\n<p>Loads the passed template into memory under the identified [name],\nand allows the user to manipulate the template with the rest of the\ncommands.</p>\n\n<p>\\param name {String}\n     Identifier for a previously stored template.</p>\n\n<p>\\param data {Object=}\n     Data object to use when running the template, where keys\n     correspond to template values, and values correspond to the\n     data to substitute into the template.  If omitted (or null),\n     then uses the object selected</p>\n\n<p>\\param fn {Function=}\n     An optional callback function to run immediately after the\n     template has completed parsing. Context is [data], parameter\n     is the completed template.</p>\n\n<hr />\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>data</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>fn</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-compileExplicit' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/js-template.html#global-method-compileExplicit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-compileExplicit' class='name expandable'>compileExplicit</a>( <span class='pre'>template, data, fn</span> ) : <a href=\"#!/api/global\" rel=\"global\" class=\"docClass\">global</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Loads the passed template into memory under the identified [name],\nand allows the user to manipulate the template wit...</div><div class='long'><hr />\n\n<p>Loads the passed template into memory under the identified [name],\nand allows the user to manipulate the template with the rest of the\ncommands.</p>\n\n<p>\\param template {String}\n     A string to run as the template.</p>\n\n<p>\\param data {Object=}\n     Data object to use when running the template, where keys\n     correspond to template values, and values correspond to the\n     data to substitute into the template.  If omitted (or null),\n     then uses the object selected</p>\n\n<p>\\param fn {Function=}\n     An optional callback function to run immediately after the\n     template has completed parsing. Context is [data], parameter\n     is the completed template.</p>\n\n<hr />\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>template</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>data</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>fn</span> : Object<div class='sub-desc'></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/global\" rel=\"global\" class=\"docClass\">global</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-getTemplate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/js-template.html#global-method-getTemplate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-getTemplate' class='name expandable'>getTemplate</a>( <span class='pre'>name, fn</span> ) : <a href=\"#!/api/global\" rel=\"global\" class=\"docClass\">global</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Pulls the selected template, and runs [fn] with the template as the\ncontext. ...</div><div class='long'><hr />\n\n<p>Pulls the selected template, and runs [fn] with the template as the\ncontext.</p>\n\n<p>\\param name {String}\n     Identifier to use when referring to this template.</p>\n\n<p>\\param fn {Function}\n     Callback to run with the template as the context.</p>\n\n<hr />\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>fn</span> : Object<div class='sub-desc'></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/global\" rel=\"global\" class=\"docClass\">global</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-js_template' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/js-template.html#global-method-js_template' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-js_template' class='name expandable'>js_template</a>( <span class='pre'>data</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Loads the passed template into memory under the identified [name], and\nallows the user to manipulate the template wit...</div><div class='long'><hr />\n\n<p>Loads the passed template into memory under the identified [name], and\nallows the user to manipulate the template with the rest of the\ncommands.</p>\n\n<p>\\param name {String}\n     The name of a saved template to load from the library.  These can\n     be stored in memory using js.template.store(name, template);</p>\n\n<p>\\param data {Object}\n     An object defining match-variables in the key, and the values to\n     substitute as the value.</p>\n\n<hr />\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>data</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-register' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/js-template.html#global-method-register' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-register' class='name expandable'>register</a>( <span class='pre'>name, fn</span> ) : <a href=\"#!/api/global\" rel=\"global\" class=\"docClass\">global</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Registers a function with the templates library, to make it\navailable within the templates. ...</div><div class='long'><hr />\n\n<p>Registers a function with the templates library, to make it\navailable within the templates.</p>\n\n<p>\\param name {String}\n     Identifier to within the templates.  Accessible by @name()</p>\n\n<p>\\param fn {Function}\n     Function to call when invoked by @name() in the templates.</p>\n\n<hr />\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>fn</span> : Object<div class='sub-desc'></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/global\" rel=\"global\" class=\"docClass\">global</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-registerSet' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/js-template.html#global-method-registerSet' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-registerSet' class='name expandable'>registerSet</a>( <span class='pre'>o</span> ) : <a href=\"#!/api/global\" rel=\"global\" class=\"docClass\">global</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Registers a set of functions through js.template.register()\n\n\\param o {Object}\n     Registers o's keys as function na...</div><div class='long'><hr />\n\n<p>Registers a set of functions through js.template.register()</p>\n\n<p>\\param o {Object}\n     Registers o's keys as function names, and o's values as\n     the functions to execute when @key() is invoked within a\n     template.</p>\n\n<hr />\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : Object<div class='sub-desc'></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/global\" rel=\"global\" class=\"docClass\">global</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-storeTemplate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/js-template.html#global-method-storeTemplate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-storeTemplate' class='name expandable'>storeTemplate</a>( <span class='pre'>name, template</span> ) : <a href=\"#!/api/global\" rel=\"global\" class=\"docClass\">global</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Loads the passed template into memory under the identified [name],\nand allows the user to manipulate the template wit...</div><div class='long'><hr />\n\n<p>Loads the passed template into memory under the identified [name],\nand allows the user to manipulate the template with the rest of the\ncommands.</p>\n\n<p>\\param name {String}\n     Identifier to use when referring to this template.</p>\n\n<p>\\param template {Any=}\n     Template string to load into the template library, or [null]\n     to remove the template from storage.</p>\n\n<hr />\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>template</span> : Object<div class='sub-desc'></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/global\" rel=\"global\" class=\"docClass\">global</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});